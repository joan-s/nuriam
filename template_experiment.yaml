#
# Input data
#
snapshots_train : ['snapshots/dataset_snapshot_1.npz',
                   'snapshots/dataset_snapshot_2.npz',
                   'snapshots/dataset_snapshot_3.npz',]
snapshots_test : ['snapshots/dataset_snapshot_4.npz',]
num_classes : 3


#
# Model (network)
#
num_groups : 4
# must be even ?

#
# Training
#
cuda_visible_devices : '0,1,2,3,4,5,6,7'
# '3' for a single GPU, the fourth one
# '0,1,2,3' first four GPUS
# set to '' if no GPUs (so will use the CPU)
crop_size : [32, 32, 32]
stride : [8, 8, 8]
select_features : [0, 1, 2, 3, 4, 5, 6, 7]
# multiple of num_groups
# set to [] for all features
batch_size : 160
# if using GPUs, 20 * number of GPUs
class_weights : [1., 0.1, 1.]
label_smoothing : 0.0
# 0.0 is no label smoothing, see pytorch doc. of cross-entropy loss
learning_rate : 5e-5
num_epochs : 60